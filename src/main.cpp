/*
DO NOT STEAL THIS CODE.
THIS IS FOR DAS ALLEWACHSEN.
PLEASE SEE THE LICENCE

https://github.com/Yellowstrawberrys/Das-AlleWachsen

*/


//Default
#include <Arduino.h>

//Display
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>

#define i2c_Address 0x3c //SCK -> A4 & SDA -> A5
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET -1   //   QT-PY / XIAO
Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET); //Create display obj


//Bluetooth
#include <SoftwareSerial.h> 

#define bt_rx 3
#define bt_tx 2

SoftwareSerial bluetooth(bt_tx, bt_rx);

//DHT
#include "DHT.h"
#define DHTPIN 7
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
float h = dht.readHumidity();
float t = dht.readTemperature();

//Soil
#define SensorPin A1
float sensorValue = 0; 

//Temperature
#define FAN1_VCC 8
#define FAN1_GND 9
#define FAN2_VCC 10
#define FAN2_GND 11

//Light Control
#define LightPin 4

//Water Pump Control
#define WaterPump_VCC 5
#define WaterPump_GND 6

// 'Das AlleWachsen', 128x64px
const unsigned char epd_bitmap_Das_AlleWachsen [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc7, 0xf7, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdb, 0xeb, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdd, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdd, 0xdd, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdd, 0xc1, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdd, 0xbe, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdd, 0xbe, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xdb, 0xbe, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc7, 0xbe, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x06, 0x73, 0x00, 0xc0, 0x67, 0x9f, 0xff, 
  0xff, 0xf0, 0xf9, 0xf3, 0xe0, 0x39, 0xff, 0x3e, 0x1f, 0x06, 0x73, 0x00, 0xc0, 0x63, 0x9f, 0xff, 
  0xff, 0xe6, 0x79, 0xf3, 0xe0, 0x39, 0xff, 0x3c, 0xcf, 0x3e, 0x73, 0x3f, 0xcf, 0xe3, 0x9f, 0xff, 
  0xff, 0xe6, 0x79, 0xf3, 0xe7, 0xf9, 0xff, 0x3c, 0xcf, 0x3e, 0x73, 0x3f, 0xcf, 0xe3, 0x9f, 0xff, 
  0xff, 0xe6, 0x79, 0xf3, 0xe7, 0xf9, 0xff, 0x3c, 0xcf, 0x3e, 0x73, 0x3f, 0xcf, 0xe3, 0x9f, 0xff, 
  0xff, 0xcf, 0x39, 0xf3, 0xe7, 0xf9, 0xef, 0x39, 0xe7, 0x3e, 0x73, 0x3f, 0xcf, 0xe1, 0x9f, 0xff, 
  0xff, 0xcf, 0x39, 0xf3, 0xe7, 0xf9, 0xef, 0x39, 0xe7, 0x3e, 0x73, 0x3f, 0xcf, 0xe1, 0x9f, 0xff, 
  0xff, 0xcf, 0x39, 0xf3, 0xe7, 0xf9, 0xef, 0x39, 0xe7, 0x3e, 0x73, 0x3f, 0xcf, 0xe1, 0x9f, 0xff, 
  0xff, 0xcf, 0x39, 0xf3, 0xe7, 0xf9, 0xef, 0x39, 0xe7, 0x3e, 0x73, 0x00, 0xcf, 0xe1, 0x9f, 0xff, 
  0xff, 0xcf, 0x39, 0xf3, 0xe0, 0x7c, 0xee, 0x79, 0xe7, 0x3e, 0x03, 0x00, 0xc0, 0xe5, 0x9f, 0xff, 
  0xff, 0xc0, 0x39, 0xf3, 0xe0, 0x7c, 0xc6, 0x78, 0x07, 0x3e, 0x03, 0xfc, 0xc0, 0xe5, 0x9f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xfc, 0xc6, 0x73, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe4, 0x9f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xfc, 0xc6, 0x73, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe4, 0x9f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xfc, 0xc6, 0x73, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe6, 0x1f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xfc, 0xc6, 0x73, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe6, 0x1f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xfc, 0x92, 0x73, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe6, 0x1f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xff, 0x11, 0xf3, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe6, 0x1f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xff, 0x39, 0xf3, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe7, 0x1f, 0xff, 
  0xff, 0x9f, 0x99, 0xf3, 0xe7, 0xff, 0x39, 0xf3, 0xf3, 0x3e, 0x73, 0xfc, 0xcf, 0xe7, 0x1f, 0xff, 
  0xff, 0x9f, 0x98, 0x70, 0xe0, 0x3f, 0x39, 0xf3, 0xf3, 0x06, 0x73, 0x00, 0xc0, 0x67, 0x9f, 0xff, 
  0xff, 0x9f, 0x98, 0x70, 0xe0, 0x3f, 0x39, 0xf3, 0xf3, 0x06, 0x73, 0x00, 0xc0, 0x67, 0x9f, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xde, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xee, 0xff, 0xff, 0xff, 0x15, 0x15, 0x15, 0x5b, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf6, 0xfd, 0x61, 0x77, 0x75, 0x75, 0xb5, 0x4a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xee, 0xc4, 0xad, 0x77, 0x35, 0x3b, 0xb1, 0x52, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xde, 0xed, 0xed, 0x57, 0x75, 0x7b, 0xb5, 0x5a, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x0d, 0xe1, 0xaf, 0x1b, 0x1b, 0xb5, 0x5b, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
  epd_bitmap_Das_AlleWachsen
};


void setup() {
  //Begins Serial with 9600 board-rate
  Serial.begin(9600);

  //Frist Screen
  delay(250);
  display.begin(i2c_Address, true);
  display.clearDisplay();
  display.display();

  display.clearDisplay();
  display.drawBitmap(0, 0,  epd_bitmap_Das_AlleWachsen, 128, 64, 1);
  display.display();

  bluetooth.begin(9600);
  bluetooth.write("AT+NAMEDas_AlleWachsen");
  dht.begin();
  delay(2000);

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SH110X_WHITE);
  display.println("Connect to Bluetooth");
  display.println("\nID> Das AlleWachsen\nPW> 1234");
  display.display();
}

void loop() {
  // put your main code here, to run repeatedly:
  if(bluetooth.available() > 0){
     char c = bluetooth.read();
     Serial.println(c);
  }
   for (int i = 0; i <= 100; i++) 
   { 
     sensorValue = sensorValue + analogRead(SensorPin); 
     delay(1); 
   } 
   sensorValue = sensorValue/100.0; 
   if(sensorValue < 40){
      Serial.print("WATER");
   }
   if(h < 50){
      Serial.print("MORE WATER IN AIR");    
   }
   if(t > 30){
      Serial.print("Cooling System.");
   }else if(t < 20){
      Serial.print("Heating System.");
   }
   delay(100);
}